#summary Work with Vim.
#labels Featured

<wiki:toc />

= Introduction =

Basic working with Vim, tips and tricks.

= Modes =

== Normal ==
When you enter in Vim, you are in *normal* mode. You _can not_ insert text in normal mode, but move through texts, buffers, tabs,.. , and execute commands like copy and paste, search and replace, open and safe files, etc.

Independently the mode you are, you always can return to normal mode pressing `ESC`.

_Normally_ you _want_ to be in *normal* mode.

== Insert ==
From *normal* mode you can switch to *insert* mode to insert text, pressing `i` (for example). In *insert* mode everything you type will be inserted in the text as in any other text editor.

There are many ways to switch to insert mode:
  * Insert here: pressing `i`.
  * Insert at the beginning of the line: pressing `I` (capital `i`).
  * Insert after the character where the cursor is: pressing `a`.
  * Insert at the end of the line: pressing `A`.
  * Insert an empty line below the line the cursor is, and insert at it: pressing `o`.
  * Insert an empty line over the line the cursor is, and insert at it: pressing `O` (capital `o`).

= Files =

== Open a file ==
From command line:
{{{
vim file.txt
}}}

From command line and go to a line:
{{{
vim file.txt +26
}}}

From normal mode:
{{{
:e file.txt
}}}

== Insert content of a file ==
{{{
:r [FILENAME]
}}}

= Characters =

== Insert character by its number value ==
{{{
<C-V>, [Number in decimal, octal or hexadecimal]
}}}

[http://vimdoc.sourceforge.net/htmldoc/insert.html#i_CTRL-V_digit Reference]

= Repetitions =

== Repeat last edition ==
In normal mode, press `.` (dot).

Example:
  * You have this text:
{{{
Hello world!
This is a test.
Goodbye.
}}}
  * In normal mode (go with `ESC`) press:
{{{
I// <ESC>
}}}
  * With that you have inserted "`//`" at the beginning of the line that the cursor is.
  * Now, you want to repeat the same action of deleting in the other two lines. Go to another line and press:
{{{
.
}}} 
  * Same in the last line.

= External commands =

== Shell ==
{{{
:sh
}}}

== Execute external command ==
{{{
:![COMMAND]
}}}

== Insert command output ==
{{{
:r![COMMAND]
}}}

Or

{{{
:.![COMMAND]
}}}

== Execute command on the editing file ==
Use `%` as the filename. For example, to count how many words are in the file you are editing:
{{{
:!wc %
}}}

= Tips =

== Sort ==
{{{
:sort
}}}

== Count words in LaTeX ==
{{{
:!texcount -1 %
}}}

= Useful plugins =

== C++ completion ==
  * [http://www.vim.org/scripts/script.php?script_id=1520 OmniCppComplete] (see [http://vim.wikia.com/wiki/VimTip1608 C++ code completion] for configuration instructions).

== Terminal/Shell buffer ==
  * [http://www.vim.org/scripts/script.php?script_id=165 vimsh]
  * [http://home.comcast.net/~bsturk/vim.html Vim (Vi Improved)]